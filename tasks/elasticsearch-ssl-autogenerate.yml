---
- name: keyfile | stat
  stat:
    path: "{{ es_ssl_keystore }}"
  register: keyfile_check

- name: keyfile | set fact
  set_fact:
    keyfile_fact: "{{ keyfile_check.stat.exists }}"

- name: keyfile | block to check which host(s) have the file
  block:

    - name: keyfile | create dict of keyfile check
      set_fact:
        keyfile_status: "{{ dict(keys|zip(values)) }}"
      vars:
        keys: "{{ ansible_play_hosts }}"
        values: "{{ ansible_play_hosts |
                    map('extract', hostvars, ['keyfile_fact'])
                    | list }}"

    - name: keyfile | set fact when no host has the file
      set_fact:
        keyfile_none: true
      when: keyfile_status.values() | list is not any

    - name: keyfile | set fact when a host does not has the file
      set_fact:
        keyfile_all: false
      when: keyfile_status.values() | list is any

    - name: keyfile | set fact when all hosts have the files
      set_fact:
        keyfile_all: true
      when: keyfile_status.values() | list is all

  run_once: true

- name: keyfile | block to copy keyfile when none has one
  block:
    - name: keyfile | set fact to copy keyfile from a host
      set_fact:
        keyfile_host: "{{ item }}"
      run_once: true
      loop: "{{ ansible_play_hosts }}"
      
    - name: keyfile | create when none has a keyfile
      shell: >-
        {{ es_bin_dir}}/elasticsearch-certutil ca --days 10950 -out {{ es_ssl_keystore }} --pass {{ es_ssl_keystore_password }}
      register: new_keyfile
      run_once: true
      when: keyfile_host

    - name: keyfile | fetch keyfile
      fetch:
        src: "{{ es_ssl_keystore }}"
        flat: true
        dest: /tmp/es_ssl_keystore_keyfile
      delegate_to: "{{ keyfile_host }}"

    - name: keyfile | copy required files to remaining hosts
      copy:
        src: /tmp/es_ssl_keystore_keyfile
        dest: "{{ es_ssl_keystore }}"

  when: keyfile_none is defined

- name: keyfile | block to copy keyfile when at least one is missing
  block:
    - name: keyfile | set fact to copy keyfile from a host
      set_fact:
        keyfile_host: "{{ ansible_hostname }}"
      run_once: true
      when: keyfile_fact is defined and keyfile_fact

    - name: keyfile | fetch keyfile
      fetch:
        src: "{{ es_ssl_keystore }}"
        flat: true
        dest: /tmp/es_ssl_keystore_keyfile
      delegate_to: "{{ keyfile_host }}"

    - name: keyfile | copy required files to remaining hosts
      copy:
        src: /tmp/es_ssl_keystore_keyfile
        dest: "{{ es_ssl_keystore }}"

  when: keyfile_all is defined and not keyfile_all

- name: keyfile | ensure absence from localhost
  file:
    path: /tmp/es_ssl_keystore_keyfile
    state: absent
  run_once: true
  delegate_to: localhost
  become: false
